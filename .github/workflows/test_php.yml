name: PHP Tests


on:
  workflow_call:
    inputs:
      safe-checkout:
        required: true
        description: "The SHA key for the commit we want to run over"
        type: string

permissions:
  contents: read

jobs:
  linux:
    strategy:
      fail-fast: false   # Don't cancel all jobs if one fails.
      matrix:
        bazel-version: ['7.1.2']
        include:
          - name: 8.1 Optimized
            version: "8.1.14"
            version-short: "8.1"
            command: composer test \&\& composer test_c
          - name: 8.1 Debug
            version: 8.1.14-dbg
            version-short: "8.1"
            command: composer test \&\& composer test_c
          - name: 8.1 Memory Leak
            version: 8.1.14-dbg
            version-short: "8.1"
            # Run specialized memory leak & multirequest tests.
            command: composer test_c \&\& tests/multirequest.sh \&\& tests/memory_leak_test.sh
          - name: 8.1 Valgrind
            version: 8.1.14-dbg
            version-short: "8.1"
            command: composer test_valgrind
          - name: 8.3 Optimized
            version: "8.3.1"
            version-short: "8.3"
            command: composer test \&\& composer test_c

    name: Linux ${{ matrix.name}}
    runs-on: ubuntu-20-large
    steps:
      - name: Checkout pending changes
        uses: protocolbuffers/protobuf-ci/checkout@v3
        with:
          ref: ${{ inputs.safe-checkout }}
      - name: Setup composer
        uses: protocolbuffers/protobuf-ci/composer-setup@v3
        with:
          cache-prefix: php-${{ matrix.version-short }}
          directory: php
      - name: Run tests
        uses: protocolbuffers/protobuf-ci/docker@b7-test
        with:
          image: us-docker.pkg.dev/protobuf-build/containers/test/linux/php:${{ matrix.bazel-version -${{ matrix.version }}-21efb73c613deddd6db6a0a86f262324a77de13f
          bazel-version: ${{ matrix.bazel-version }}
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          extra-flags: -e COMPOSER_HOME=/workspace/composer-cache
          command: ${{ matrix.command }}

  linux-32bit:
    strategy:
      fail-fast: false   # Don't cancel all jobs if one fails.
      matrix:
        version: ['8.1']
        bazel-version: ['7.1.2']
        suffix: [ '', '-zts']
        test: ['test', 'test_c']
        exclude:
          - suffix: '-zts'
            test: 'test'
        include:
          - suffix: '-zts'
            suffix_name: ' Thread Safe'
          - test: 'test_c'
            test_name: ' Extension'

    name: Linux 32-bit ${{ matrix.version}}${{ matrix.suffix_name }}${{ matrix.test_name }}
    runs-on: ubuntu-20-large
    env:
      image: us-docker.pkg.dev/protobuf-build/containers/test/linux/32bit@sha256:429f924aec315704b4233adcbe4b29006116f27769db98acd176b9eb69c31299
    steps:
      - name: Checkout pending changes
        uses: protocolbuffers/protobuf-ci/checkout@v3
        with:
          ref: ${{ inputs.safe-checkout }}

      - name: Cross compile protoc for i386
        id: cross-compile
        uses: protocolbuffers/protobuf-ci/cross-compile-protoc@v3
        with:
          image: us-docker.pkg.dev/protobuf-build/containers/common/linux/bazel:${{ matrix.bazel-version }}-bec4e87effd62da1d4f9a13d377e37bcb80376c9
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          architecture: linux-i386

      - name: Setup composer
        uses: protocolbuffers/protobuf-ci/composer-setup@v3
        with:
          cache-prefix: php-${{ matrix.version }}
          directory: php

      - name: Run tests
        uses: protocolbuffers/protobuf-ci/docker@b7-test
        with:
          image: ${{ env.image }}
          bazel-version: ${{ matrix.bazel-version }}
          platform: linux/386
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          extra-flags: -e COMPOSER_HOME=/workspace/composer-cache -e PROTOC=/workspace/${{ steps.cross-compile.outputs.protoc }}
          command: >-
            /bin/bash -cex '
            PATH="/usr/local/php-${{ matrix.version }}${{matrix.suffix}}/bin:$PATH";
            cd php && php -v && php -m;
            composer update --ignore-platform-reqs;
            composer ${{ matrix.test }}'

  linux-aarch64:
    name: Linux aarch64
    runs-on: ubuntu-20-large
    steps:
      - name: Checkout pending changes
        uses: protocolbuffers/protobuf-ci/checkout@v3
        with:
          ref: ${{ inputs.safe-checkout }}

      - name: Cross compile protoc for aarch64
        id: cross-compile
        uses: protocolbuffers/protobuf-ci/cross-compile-protoc@v3
        with:
          image: us-docker.pkg.dev/protobuf-build/containers/common/linux/bazel:${{ matrix.bazel-version }}-bec4e87effd62da1d4f9a13d377e37bcb80376c9
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          architecture: linux-aarch64

      - name: Setup composer
        uses: protocolbuffers/protobuf-ci/composer-setup@v3
        with:
          cache-prefix: php-8.1
          directory: php

      - name: Run tests
        uses: protocolbuffers/protobuf-ci/docker@b7-test
        with:
          image: us-docker.pkg.dev/protobuf-build/containers/test/linux/php-aarch64@sha256:23a3b88e9a066f5468457088b92ba11fd145b5aa4faa79b00189bdee54387cd9
          platform: linux/arm64
          bazel-version: ${{ matrix.bazel-version }}
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          extra-flags: -e COMPOSER_HOME=/workspace/composer-cache -e PROTOC=/workspace/${{ steps.cross-compile.outputs.protoc }}
          command: >-
            -c '
            cd php;
            composer update --ignore-platform-reqs;
            composer test;
            composer test_c'

  macos:
    strategy:
      fail-fast: false   # Don't cancel all jobs if one fails.
      matrix:
        version: ['8.2', '8.3']

    name: MacOS PHP ${{ matrix.version }}
    runs-on: macos-12
    steps:
      - name: Checkout pending changes
        uses: protocolbuffers/protobuf-ci/checkout@v3
        with:
          ref: ${{ inputs.safe-checkout }}

      - name: Uninstall problematic libgd
        run: brew uninstall --ignore-dependencies gd

      - name: Install dependencies
        run: brew install coreutils gd

      - name: Pin PHP version
        uses: shivammathur/setup-php@8872c784b04a1420e81191df5d64fbd59d3d3033 # 2.30.2
        with:
          php-version: ${{ matrix.version }}

      - name: Check PHP version
        run: php --version | grep ${{ matrix.version }} || (echo "Invalid PHP version - $(php --version)" && exit 1)

      - name: Setup composer
        uses: protocolbuffers/protobuf-ci/composer-setup@v3
        with:
          cache-prefix: php-${{ matrix.version }}
          directory: php

      - name: Run tests
        uses: protocolbuffers/protobuf-ci/bash@b7-test
        with:
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          bazel-version: ${{ matrix.bazel-version }}
          command: |
            pushd php
            php -v
            php -m
            composer update
            composer test_c
            popd

      - name: Run conformance tests
        uses: protocolbuffers/protobuf-ci/bazel@b7-test
        with:
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          bazel-cache: php_macos/${{ matrix.version }}
          bazel-version: ${{ matrix.bazel-version }}
          bazel: test //php:conformance_test_c --action_env=PATH --test_env=PATH
